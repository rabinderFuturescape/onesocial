# Use the existing Dockerfile as a base
FROM node:18-alpine AS base

# Install dependencies only when needed
FROM base AS deps
WORKDIR /app

# Install dependencies based on the preferred package manager
COPY package.json yarn.lock* package-lock.json* pnpm-lock.yaml* ./
RUN \
  if [ -f yarn.lock ]; then yarn --frozen-lockfile; \
  elif [ -f package-lock.json ]; then npm ci; \
  elif [ -f pnpm-lock.yaml ]; then yarn global add pnpm && pnpm i --frozen-lockfile; \
  else echo "Lockfile not found." && exit 1; \
  fi

# Rebuild the source code only when needed
FROM base AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# Add Onesso provider files
COPY apps/backend/src/services/auth/providers/onesso.provider.ts ./apps/backend/src/services/auth/providers/onesso.provider.ts
COPY apps/backend/src/services/auth/providers/providers.factory.ts ./apps/backend/src/services/auth/providers/providers.factory.ts

# Build the application
RUN npm run build

# Production image, copy all the files and run the app
FROM base AS runner
WORKDIR /app

ENV NODE_ENV production

# Copy built application
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/package.json ./package.json

# Set environment variables for Onesso
ENV ONESSO_BASE_URL=http://keycloak:8080
ENV ONESSO_REALM=postiz-realm
ENV ONESSO_CLIENT_ID=postiz-client
ENV ONESSO_CLIENT_SECRET=changeme
ENV ONESSO_REDIRECT_URI=https://your.domain.com/auth/onesso/callback

# Start the application
CMD ["npm", "run", "start:prod"]
